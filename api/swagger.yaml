swagger: '2.0'
info:
  version: 0.0.1
  title: Model Editor API
basePath: /meditor/api
schemes:
  - http
host: localhost:8081
securityDefinitions:
  URS4:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://example.com/oauth/authorize
    tokenUrl: https://example.com/oauth/token
    scopes:
      read: Grants read access
      write: Grants write access
      admin: Grants read and write access to administrative information
security:
  - URS4: [read, write]
paths:
  /listModels:
    get:
      summary: Lists Models
      description: Lists 'Model' objects each with an icon, description and count of number of instances of an object.
      operationId: listModels
      parameters:
        - name: properties
          in: query
          description: Comma-separated list of fields to be returned
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            title: ArrayOfModels
            items:
              $ref: '#/definitions/modelCatalogEntry'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor
  /putModel:
    post:
      summary: Adds a Model
      description: Adds a Model object
      operationId: putModel
      consumes: 
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: Uploaded model file (JSON)
          required: true
          type: file
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/success'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor
  /getModel:
    get:
      summary: Gets a Model
      description: Gets a Model object
      operationId: getModel
      parameters:
        - name: name
          in: query
          description: Name of the model
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/model'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor   
  /listDocuments:
    get:
      summary: Lists documents of a given Model 
      description: Lists documents of a given Model 
      operationId: listDocuments
      security: []
      parameters:
        - name: model
          in: query
          description: Name of the Model
          type: string
          required: true
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            title: ArrayOfDocuments
            items:
              $ref: '#/definitions/docCatalogEntry'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor
  /putDocument:
    post:
      summary: Puts a document
      description: Puts a document
      operationId: putDocument
      consumes: 
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: Uploaded document file (JSON)
          required: true
          type: file
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/success'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor    
  /getDocument:
    get:
      summary: Gets a document 
      description: Gets a document 
      operationId: getDocument
      security: []
      parameters:
        - name: model
          in: query
          description: Name of the Model
          type: string
          required: true
        - name: title
          in: query
          description: Title of the document
          type: string
          required: true
        - name: version
          in: query
          description: Version of the document
          type: string
          required: false
          default: "latest"
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            title: Document
            items:
              $ref: '#/definitions/document'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor
  /getDocumentHistory:
    get:
      summary: Gets a document 
      description: Gets a document's history 
      operationId: getDocumentHistory
      security: []
      parameters:
        - name: model
          in: query
          description: Name of the Model
          type: string
          required: true
        - name: title
          in: query
          description: Title of the document
          type: string
          required: true
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            title: Document
            items:
              $ref: '#/definitions/docHistory'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/error'
        '422':
          description: Invalid syntax
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service not available
          schema:
            $ref: '#/definitions/error'
      x-swagger-router-controller: Meditor
definitions:
  error:
    type: object
    properties:
      code:
        type: integer
      description:
        type: string
    title: ServerError
  success:
    type: object
    properties:
      code:
        type: integer
      description:
        type: string
    title: ServerSuccess
    example:
      code: 0
      description: description
  model:
    type: object
    required:
      - name
      - description
      - icon
      - schema
      - layout
    properties:
      x-meditor: 
        type: object
        properties:
          title:
            type: string
            description: Name of the field in the model to be used as a title
          modifiedOn:
            type: string
            description: Date when a last document edit was made
          modifiedBy:
            type: string
            description: Author who last modified a document belonging to the model 
          count:
            type: string
            format: Number
            description: Number of documents belonging to the model
      name:
        type: string
        description: Name of the model
      description:
        type: string
        description: Model's description
      icon: 
        $ref: '#/definitions/model_icon'
      schema:
        type: string
        description: Model's schema
      layout:
        type: string
        description: Model layout based on Angular JSON Schema form
      titleField:
        type: string
        description: Property name in the Model's schema for using as title of the document instance of the model
      documentation:
        type: string
        description: Any documentation (text) for the Model
      tag:
        type: array
        items:
          type: string
  modelCatalogEntry:
    type: object
    required:
      - description
      - name
    properties:
      name:
        type: string
        description: >-
          Name of the model (ex: FAQ, Alert, Collection etc.,): displayed to the
          user in UI
      description:
        type: string
        description: >-
          Description of the model (ex: FAQ, Alert, Collection etc.,):
          description of the model; might be shown to user as a tooltip
      icon:
        $ref: '#/definitions/model_icon'
      schema:
        type: string
        description: JSON Schema of the model itself
      x-meditor:
        type: object
        properties:
          title:
            type: string
            description: JSON path to the field in the Model to be used as title in displays
          modifiedOn:
            type: string
            description: Date-time of modification
          modifiedBy:
            type: string
            description: Modifier's user name
          version:
            type: string
            description: Version of the model represented by date-time of modification
          count:
            type: integer
            description: Number of instances of the model
            minimum: 1
      documentation":
        type: string
        description: Link to model's documentation
      tag:
        type: array
        description: "An array of tags associated with the model: can be used for searching models"
        items:
          type: string
  model_icon:
    properties:
      name:
        type: string
        description: 'Name of the Font Awesome icon (ex: )'
      color:
        type: string
        description: 'Background color to be used for the Font Awesome icon (ex: )'
    description: 'Icon for the model: currently limited to Font Awesome'
    example:
      color: color
      name: name
  docCatalogEntry:
    properties:
      title:
        type: string
        description: Title for the document
      x-meditor:
        type: object
        properties:
          modifiedOn:
            type: string
            description: Date-time of modification
          modifiedBy:
            type: string
            description: Modifier's user name
  document:
    properties:
      x-meditor:
        type: object
        properties:
          modifiedOn:
            type: string
            description: Date-time of modification
          modifiedBy:
            type: string
            description: Modifier's user name
      schema:
        type: string
      layout:
        type: string
      doc:
        type: string
  docHistory:
    required:
      - modifiedOn
      - modifiedBy
    properties:
      modifiedBy:
        type: string
      modifiedOn:
        type: string
        format: date-time