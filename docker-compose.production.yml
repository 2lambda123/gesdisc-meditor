version: "3.3"

services:

  proxy:
    image: registry1.gesdisc.eosdis.nasa.gov/meditor/meditor_proxy:0.34.0
    restart: on-failure
    ports:
      - "80:8080"
    depends_on:
      - database
    environment:
      - SERVER_HOST=meditor_server
      - UI_HOST=meditor_ui
      - MONITOR_HOST=meditor_monitor
      - NATS_HOST=meditor_nats
    deploy:
      placement:
        constraints:
          - node.labels.database == primary

  notifier:
    image: registry1.gesdisc.eosdis.nasa.gov/meditor/meditor_notifier:0.37.0
    restart: on-failure
    depends_on:
      - nats
    environment:
      - MAIL_HOST=${MAIL_HOST}
      - HOST_NAME=${HOST_NAME}
      - MEDITOR_NATS_SERVER=nats://meditor_nats:4222
    deploy:
        placement:
          constraints:
            - node.labels.database == primary

  ui:
    image: registry1.gesdisc.eosdis.nasa.gov/meditor/meditor_ui:0.54.0
    restart: on-failure
    environment:
      - NODE_ENV=${NODE_ENV}
      - APP_URL=${APP_URL}
      - APP_UI_URL=${APP_UI_URL}
    deploy:
      placement:
        constraints:
          - node.labels.database == primary
 
  server:
    image: registry1.gesdisc.eosdis.nasa.gov/meditor/meditor_server:0.49.0
    depends_on:
      - database
    restart: on-failure
    environment:
      - NODE_ENV=${NODE_ENV}
      - NODE_OPTIONS=--max_old_space_size=4096
      - APP_URL=${APP_URL}
      - APP_UI_URL=${APP_UI_URL}
      - MONGOURL=mongodb://meditor_database:27017
      - UUI_APP_URL_OPS=${UUI_APP_URL_OPS}
      - UUI_APP_URL_TEST=${UUI_APP_URL_TEST}
      - MEDITOR_NATS_SERVER=nats://meditor_nats:4222
    secrets:
      - auth_host
      - auth_client_id
      - auth_client_secret
    deploy:
      placement:
        constraints:
          - node.labels.database == primary

  uui-subscriber:
    image: registry1.gesdisc.eosdis.nasa.gov/uui/uui-meditor-subscriber:0.9.0
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV}
      - PUBLISH_TO_UUI=${PUBLISH_TO_UUI}
      - MEDITOR_NATS_SERVER=nats://meditor_nats:4222
      - UUI_APP_URL_OPS=${UUI_APP_URL_OPS}
      - UUI_APP_URL_TEST=${UUI_APP_URL_TEST}
    secrets:
      - UUI_AUTH_CLIENT_ID
      - URS_USER
      - URS_PASSWORD

  nats:
    image: nats-streaming:0.15.1 
    restart: on-failure
    volumes:
      - ${NATS_HOST_VOLUME}:/nats/data

  database:
    image: registry1.gesdisc.eosdis.nasa.gov/certified/mongo:4.1.4
    restart: on-failure
    ports:
      - "47017:27017"
    volumes:
      - ${DATABASE_HOST_VOLUME}:/data/db
    deploy:
      placement:
        constraints:
          - node.labels.database == primary

  monitor:
    image: portainer/portainer:1.20.0
    command: -H unix:///var/run/docker.sock
    ports:
      - "9002:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - monitor_data:/data
    deploy:
      placement:
        constraints:
          - node.labels.database == primary

  agent:
    image: portainer/agent:1.1.2
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host
    networks:
      - portainer_agent
    deploy:
      mode: global
      placement:
        constraints: 
          - node.platform.os == linux
          - node.labels.database == primary

networks:
  portainer_agent:
    driver: overlay
    attachable: true

volumes:
  monitor_data:

secrets:
    auth_host:
      external: true
    auth_client_id:
      external: true
    auth_client_secret:
      external: true
    UUI_AUTH_CLIENT_ID:
      external: true
    URS_USER:
      external: true
    URS_PASSWORD:
      external: true
